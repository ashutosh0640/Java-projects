package com.shop.luxora.entity;

import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.Table;


@Entity
@Table(name="users")
public class User {
	
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private long id;
	
	@Column(length=40, nullable=false)
	private String firstName;
	
	@Column(length=40)
	private String middleName;
	
	@Column(length=40)
	private String lastName;

	@Column(length=40, nullable=false, unique=true)
	private String email;
	
	@Column(length=40, nullable=false, unique=true)
	private String mobileNo;
	
	@Column(nullable=false)
	@Size(min=7, max=40)
	private String password;
	
	private String image;
	
	@JoinTable(
			name="uses_roles",
			joinColumns=@JoinColumn(
					name="user_id", referencedColumnName="id"
			),
			inverseJoinColumns=@JoinColumn(
					name="role_id", referencedColumnName="id"
			)
	)
	@ManyToMany(fetch=FetchType.EAGER, cascade=CascadeType.ALL)
	private Set<Role> roles = new HashSet<>();
	
	
	public User() {}


	public User(String firstName, String middleName, String lastName, String email, String mobileNo, String image,
			Set<Role> roles) {
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.email = email;
		this.mobileNo = mobileNo;
		this.image = image;
		this.roles = roles;
	}


	public User(long id, String firstName, String middleName, String lastName, String email, String mobileNo,
			String image, Set<Role> roles) {
		this.id = id;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.email = email;
		this.mobileNo = mobileNo;
		this.image = image;
		this.roles = roles;
	}
	
	
	
	
	
	

}
